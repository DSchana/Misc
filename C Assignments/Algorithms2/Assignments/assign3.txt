Script started on Sun Mar 12 23:45:26 2017
[?1034hbash-3.2$ at a[K[K[K[Kcat assign3.c
/*
 * Title:	assign3.c
 * Author:	Dilpreet S. Chana
 * Description:	Text analyzer that shows various details
 *		about a given text.
**/

#include <stdio.h>
#include <string.h>
#include <ctype.h>

void letterAnalysis(char s[][80], int l);	       // prints a table indicating the number of occurrences of
						       // each letter of the alphabet in the complete text
int wordLengthAnalysis(char s[][80], int l, int len);  // returns the number of occurrences of words with
						       // that length appearing in the text
void wordAnalysis(char s[][80], int l);                // prints a table indicating the number of occurrences 
						       // of each different word in the text

int main() {
	int num_lines = 0;

	scanf("%d", &num_lines);

	char story[10][80] = { { 0 } };

	// Read story 
	for (int i = 0; i <= num_lines; i++) {
		fgets(story[i], 80, stdin);  // Reads each line from the file into a row of the lines array
	}

	printf("Total Letter Count:\n");
	letterAnalysis(story, num_lines);

	printf("\nWord Lengths:\n");
	for (int i = 1; i <= 20; i++) {
		int w_len = wordLengthAnalysis(story, num_lines, i);

		if (w_len == 1) {
			printf("%2d word of length %d\n", w_len, i);
		}
		else {
			printf("%2d words of length %d\n", w_len, i);
		}
	}

	printf("Word Frequencies:\n");
	wordAnalysis(story, num_lines);

	return 0;
}

/*
 * Description:	Display the frequency of each letter
 * Parameters:	2d array: The text to analyze
 *		Integer: Number of lines in text
 * Returns:	void
**/
void letterAnalysis(char s[][80], int l) {
	// 97 - 122
	int let[26] = { 0 };

	for (int i = 1; i <= l; i++) {
		for (int j = 0; j < 80; j++) {
			if (isalpha(s[i][j])) {
				char curr = tolower(s[i][j]);
				let[curr - 'a']++;
			}
		}
	}

	for (int i = 0; i < 26; i++) {
		printf("%c: %-3d\n", (char)(i + 97), let[i]);
	}
}

/*
 * Description: Count the number of words with a specified length
 * Parameters:  2d array: The text to analyze
 *              Integer l: Number of lines in text
 *		Integer len: Target word size
 * Returns:     Number of words with length len
**/
int wordLengthAnalysis(char s[][80], int l, int len) {
	int tot = 0;

	for (int i = 1; i <= l; i++) {
		int curr_len = 0;
		for (int j = 0; j < 80; j++) {
			if (!isblank(s[i][j] && s[i][j] != 0 && !iscntrl(s[i][j]))) {
				curr_len++;
			}
			else if (s[i][j] == 0 || isblank(s[i][j])) {
				if (curr_len == len) {
					tot++;
				}

				curr_len = 0;
			}
		}
	}

	return tot;
}

/*
 * Description: Display the frequency of each word
 * Parameters:  2d array: The text to analyze
 *              Integer: Number of lines in text
 * Returns:     void
**/
void wordAnalysis(char s[][80], int l) {
	char s_copy[l][80];
	char *tkn;

	int word_count = 0;
	int largest = 0;

	for (int i = 0; i <= l; i++) {
		strcpy(s_copy[i], s[i]);
	}

	for (int i = 1; i <= l; i++) {
		tkn = strtok(s[i], " \n\r\b\t");

		while (tkn != NULL) {
			word_count++;
			tkn = strtok(NULL, " \n\r\b\t");
		}
	}

	char words[word_count][20];
	int word_freq[word_count];
	int word_pos = 0;

	memset(words, 0, sizeof(words[0][0]) * word_count * 20);
	memset(word_freq, 0, sizeof(word_freq[0]) * word_count);

	// Fill the words array
	for (int i = 1; i < l; i++) {
		tkn = strtok(NULL, " \n\r\b\t");

		while (tkn != NULL) {
			strcpy(words[word_pos], tkn);

			word_pos++;
			tkn = strtok(NULL, " \n\r\b\t");
		}
	}

	// Count frequencies
	for (int i = 0; i < word_count; i++) {
		if (strcmp(words[i], " ") != 0) {
			for (int j = i; j < word_count; j++) {
				if (strcmp(words[i], words[j]) == 0) {
					word_freq[i]++;
					if (i != j) {
						strcpy(words[j], " ");  // Mark as analyzed
					}
				}
			}
		}
	}

	// Find largest word size
	for (int i = 0; i < word_count; i++) {
		int curr_len = 0;
		for (int j = 0; j < 20; j++) {
			if (words[i][j] != 0) {
				curr_len++;
			}
		}

		if (curr_len > largest) {
			largest = curr_len;
		}
	}

	// Print table
	for (int i = 0; i < word_count; i++) {
		if (word_freq[i] > 0) {
			printf("\"%s\"", words[i]);
			for (int j = 0; j < largest - strlen(words[i]); j++) {
				printf(" ");
			}

			if (word_freq[i] == 1) {
				printf(" appeared 1 time\n");
			}
			else {
				printf(" appeared %d times\n", word_freq[i]);
			}
		}
	}
}
bash-3.2$ cat input [K3.txt
4
To be, or not to be? That is the question:
Whether â€™tis nobler in the mind to suffer
The slings and arrows of outrageous fortune,
Or to take arms against a sea of troubles,bash-3.2$ gcc assign3.c -o assign3.c[K[K
bash-3.2$ ./assign3 < input3.txt
Total Letter Count:
a: 10 
b: 4  
c: 0  
d: 2  
e: 15 
f: 5  
g: 3  
h: 6  
i: 7  
j: 0  
k: 1  
l: 3  
m: 2  
n: 9  
o: 16 
p: 0  
q: 1  
r: 11 
s: 12 
t: 18 
u: 6  
v: 0  
w: 2  
x: 0  
y: 0  
z: 0  

Word Lengths:
 0 words of length 1
 0 words of length 2
 0 words of length 3
 0 words of length 4
 0 words of length 5
 0 words of length 6
 0 words of length 7
 0 words of length 8
 0 words of length 9
 0 words of length 10
 0 words of length 11
 0 words of length 12
 0 words of length 13
 0 words of length 14
 0 words of length 15
 0 words of length 16
 0 words of length 17
 0 words of length 18
 0 words of length 19
 0 words of length 20
Word Frequencies:
""  appeared 34 times
bash-3.2$ ls -l
total 312
-rwxr-xr-x  1 DSchana  staff   8624 27 Jan 23:47 assign1
-rw-r--r--  1 DSchana  staff   1946 27 Jan 23:46 assign1.c
-rw-r--r--  1 DSchana  staff   3162 27 Jan 23:47 assign1.txt
-rwxr-xr-x  1 DSchana  staff   8828 12 Feb 21:24 assign2
-rw-r--r--  1 DSchana  staff   3808 12 Feb 21:23 assign2.c
-rw-r--r--  1 DSchana  staff   4911 12 Feb 21:24 assign2.txt
-rwxr-xr-x  1 DSchana  staff  13448 12 Mar 23:46 assign3
-rw-r--r--  1 DSchana  staff   4238 12 Mar 23:44 assign3.c
-rw-r--r--  1 DSchana  staff  71333 12 Mar 22:22 assign3.exe
-rw-r--r--  1 DSchana  staff   4777 12 Mar 23:45 assign3.txt
-rw-r--r--  1 DSchana  staff     14 26 Jan 10:21 input1.txt
-rw-r--r--  1 DSchana  staff    176 12 Mar 22:22 input3.txt
bash-3.2$ exit
exit

Script done on Sun Mar 12 23:46:21 2017
